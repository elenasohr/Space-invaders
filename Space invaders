add_library("minim")

# music and special sound effects 
main_theme = None 
shoot = None
GameOver = None 
win = None 

# the mode variables represents the screen shown to the player
mode = 0

explosion = None 
ship = None 

# variables for the bullets 

bullet = None
bulletshot = False
bullety = 100

# variable for the enemies 
enemy2, enemy1 = None, None
enemyx = 100
enemyY = 75

# location of the enemies 
location1_y = enemyY
location1_x = enemyx
x = 350
xspeed = 4
x2speed = 5

y = 100

# speed of the bullet 
yspeed = - 125

# location of the bullets 
bullet1_x = x
bullet1_y = bullety + 490
bullet2_x = x + 37
bullet2_y = bullety + 490


space = loadImage("background.png")

lstshot = []



        
def setup():
    global shoot, main_theme, mode, GameOver, win
    # setup of the background 
    size(800,600)
    background(0)
    space = loadImage("background.png")
    
    # music
    minim = Minim(this)
    
    # bullet sound effects
    shoot = minim.loadSample("shoot.wav")
    
    #game over sound effect
    GameOver = minim.loadFile("GameOver.mp3")
    
    # winner sound effect 
    win = minim.loadFile("winner.mp3")
    
    # main song for the game 
    main_theme = minim.loadFile("Paztec.mp3")
    
    
    if mode == 1:
        main_theme.play()

def draw():
    global x, bullety, xspeed, enemyx, x2speed, bulletshot, bulletload, enemyY, y, bulletx, score, mode, lstshot, main_theme, GameOver, win 

    # if mode = 0, then the menu of the game will be shown  
    if mode == 0:
        menu = loadImage("start.png")
        background(menu)
        text("Press p to begin your battle against space", 300, 75)
        text("Press r to view the rules of the game", 300, 100)
    
    # if the user clicks "p" the mode will change to the game 
    if keyPressed:
        if (key) == 'p':
            mode = 1
    # if the user clicks "r" the mode will change to the rules of the game 
        elif(key) == 'r':
            mode = 2
    
    # code for the second mode of the game (rules page)
    if mode == 2:
        rules = loadImage("ruless.png")
        background(rules)

    # the space invaders game 
    
    # if p has been pressed then mode_one will run which is the game 
    if mode == 1:          
        main_theme.play()
    # x += xspeed represents the ship moving on the x axis 
        x += xspeed
        
        enemyx += x2speed
        
        # bullet image 
        bullet = loadImage("bullet.png")
        
        # background image 
        
        space = loadImage("background.png")
        background(space)
        
        # calling the ship function 
        
        ship()
        
        # first enemy image
        enemy2 = loadImage("enemy2.png")
        
        # second enemy image 
        enemy1 = loadImage("enemy1.png")
        
        #adding location for the bullets
        bullet1_x = x
        bullet1_y = bullety + 490
        
        bullet2_x = x + 37
        bullet2_y = bullety + 490
        
        # drawing bullets
        image(bullet, bullet1_x + 30, bullet1_y)
        # top row of enemies 
        
        location1_x = enemyx
        location1_y = enemyY
        
        location2_x = enemyx + 50
        location2_y = enemyY
        
        location3_x = enemyx + 100
        location3_y = enemyY
        
        location4_x = enemyx + 200
        location4_y = enemyY
        
        location5_x = enemyx + 250
        location5_y = enemyY
        
        location6_x = enemyx + 300
        location6_y = enemyY
        
        location7_x = enemyx + 150 
        location7_y = enemyY
        
        # buttom row of enemies 
        
        location8_x = enemyx
        location8_y = enemyY + 100
        
        location9_x = enemyx + 50 
        location9_y = enemyY + 100
        
        location10_x = enemyx + 100
        location10_y = enemyY + 100
        
        location11_x = enemyx + 150 
        location11_y = enemyY + 100
        
        location12_x = enemyx + 200
        location12_y = enemyY + 100
        
        location13_x = enemyx + 250
        location13_y = enemyY + 100
        
        location14_x = enemyx + 300
        location14_y = enemyY + 100
    
        
        
        if 1 not in lstshot:
            image(enemy1, location1_x, location1_y, 50, 50)
        if 2 not in lstshot:
            image(enemy1, location2_x, location2_y, 50 , 50)
        if 3 not in lstshot:
            image(enemy2, location3_x, location3_y, 50 , 50)
        if 4 not in lstshot:
            image(enemy1, location4_x, location4_y, 50 , 50)
        if 5 not in lstshot:
            image(enemy2, location5_x, location5_y, 50 , 50)
        if 6 not in lstshot:
            image(enemy2, location6_x, location6_y, 50, 50)
        if 7 not in lstshot:
            image(enemy1, location7_x, location7_y, 50, 50)
        if 8 not in lstshot:
            image(enemy1, location8_x, location8_y, 50, 50)
        if 9 not in lstshot:
            image(enemy2, location9_x, location9_y, 50, 50)
        if 10 not in lstshot:
            image(enemy1, location10_x, location10_y, 50, 50)
        if 11 not in lstshot:
            image(enemy2, location11_x, location11_y, 50, 50)
        if 12 not in lstshot:
            image(enemy1, location12_x, location12_y, 50, 50)
        if 13 not in lstshot:
            image(enemy2, location13_x, location13_y, 50, 50)
        if 14 not in lstshot:
            image(enemy1, location14_x, location14_y, 50, 50)
        
        enemies_x = []
        enemies_y = enemyY
        
        enemies_x.append(location1_x)
        enemies_x.append(location2_x)
        enemies_x.append(location3_x)
        enemies_x.append(location4_x)
        enemies_x.append(location5_x)
        enemies_x.append(location6_x)
        enemies_x.append(location7_x)
        enemies_x.append(location8_x)
        enemies_x.append(location9_x)
        enemies_x.append(location10_x)
        enemies_x.append(location11_x)
        enemies_x.append(location12_x)
        enemies_x.append(location13_x)
        enemies_x.append(location14_x)
        #check for collision here
        shotlst = collision(bullet1_x, bullet1_y, bullet2_x, bullet2_y, enemies_x, enemies_y)
        # remove from the list
        enemies_x.remove(location1_x)
        enemies_x.remove(location2_x)
        enemies_x.remove(location3_x)
        enemies_x.remove(location4_x)
        enemies_x.remove(location5_x)
        enemies_x.remove(location6_x)
        enemies_x.remove(location7_x)
        enemies_x.remove(location8_x)
        enemies_x.remove(location9_x)
        enemies_x.remove(location10_x)
        enemies_x.remove(location11_x)
        enemies_x.remove(location12_x)
        enemies_x.remove(location13_x)
        enemies_x.remove(location14_x)
        shooting(enemies_x, enemies_y)
        

        #adding enemies that will never appear again
        for enemy in shotlst:
            if enemy not in lstshot:
                lstshot.append(enemy)
        
        if enemyx >= 350:
            x2speed = - 16
            enemyY = enemyY + 25
        elif enemyx < 80:
            x2speed = 16
            enemyY = enemyY + 25
    
        if len(lstshot) == 14:
            mode = 3
            
        if enemyY == 400:
            mode = 4
            
    if mode == 3:
        winner = loadImage("winner.jpeg")
        background(winner)
        text("Press y to play again!", 320, 90)
        main_theme.pause()
        win.play()
        if keyPressed:
            if (key) == 'y':
                mode = 1
                enemyY = 75
                lstshot = []
                
    
            
    if mode == 4:
        gameover = loadImage("lose.jpeg")
        background(gameover)
        text("Press y to play again!", 320, 150)
        main_theme.pause()
        GameOver.play()
        if keyPressed:
            if (key) == 'y':
                mode = 1
                enemyY = 75
                lstshot = []
        
                
        
        
        
 
def keyPressed():
    global image, x, xspeed, yspeed, y, bulletshot, bullet, bullety, shoot
    if (key) == 'd': 
        xspeed = xspeed + 1
    if (key) == 'a':
        xspeed = xspeed - 1
    if(key) == 'w':
        bulletshot = True
        if bullety <= -450:
            bulletshot = False
    if (key) == "w": shoot.trigger()
    

    if x <= 5:
        xspeed = 2 
    elif x >= 730:
        xspeed = -2
    
def keyReleased():
    global xspeed
    Letters = ['a','d'] 
    for i in range(2):
        if (key == Letters[i]): xspeed = 0
    
    
def collision(bullet1_x, bullet1_y, bullet2_x, bullet2_y, enemies, enemies_y):
    global location1_y, location1_x
    list_of_shot = []
    i = 1
    for enemy in enemies:
        if enemies_y - 34 < bullet1_y and bullet1_y < 34 + enemies_y:
            if ((enemy - 34 < bullet1_x and enemy + 34 > bullet1_x)):
                list_of_shot.append(i)
        i += 1
    return list_of_shot
    
def shooting(enemies_x, enemies_y):
    global bullety, bulletshot, bullet1_x, bullet1_y, bullet2_x, bullet2_y
    
    # Makes the bullets shoot multiple times 
    if bullety <= -450:
            bullety = 515
            bulletshot = False
            
    # Makes the ship shoot bullets 
    if bulletshot == True and bullety != -625:
        bullety += yspeed    

def ship():
    # ship image 
    ship = loadImage("ship.png")
    
    # ship location 
    image(ship, x, 530)
    
    # ship boundaries and speed 
    if x <= 5:
        xspeed = 2
    elif x >= 730:
        xspeed = -2



